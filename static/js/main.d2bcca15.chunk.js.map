{"version":3,"sources":["localisation.js","constants.js","components/categoryList/index.js","components/itemList/index.js","components/header/index.js","components/App.js","serviceWorker.js","index.js"],"names":["localizeStrings","urls","getItems","getCategory","useStyles","makeStyles","theme","root","width","maxWidth","paper","margin","spacing","padding","CategoryList","props","useState","data","setData","useEffect","fetch","then","response","json","DATA","classes","title","List","subheader","ListSubheader","className","map","detail","Paper","Grid","container","wrap","Typography","noWrap","name","ItemList","itemData","setItemData","item","xs","zeroMinWidth","display","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","Header","activeTab","setActiveTab","setTitle","tabs","id","CssBaseline","AppBar","position","Toolbar","variant","Drawer","obj","ListItem","button","key","onClick","selected","ListItemText","primary","App","ScopedCssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2bcca15.chunk.js","sourcesContent":["export const localizeStrings = {\n  headerTitle: \"Welcome  to  Foodkonnekt\",\n  itemText: \"Items\",\n  categoryText: \"Categories\",\n};\n","const urls = {\n  getItems:\n    \"https://www.foodkonnekt.com/admin/getAllItems?merchantUId=c4656bc2-cc41-4486-8d1e-1b4665c57fa7\",\n  getCategory:\n    \"https://www.foodkonnekt.com/admin/getAllCategories?merchantUId=c4656bc2-cc41-4486-8d1e-1b4665c57fa7\",\n};\n\nexport default urls;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nimport \"../header/header.css\";\nimport urls from \"../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(2)}px auto`,\n    padding: theme.spacing(4),\n  },\n}));\n\nconst CategoryList = (props) => {\n  const [data, setData] = useState([]);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetch(urls.getCategory)\n      .then((response) => response.json())\n      .then((data) => setData(data.DATA));\n  });\n  const classes = useStyles();\n  const { title } = props;\n\n  return (\n    <List\n      subheader={<ListSubheader className=\"listHeader\">{title}</ListSubheader>}\n      className={classes.root}\n    >\n      {data.map((detail) => (\n        <Paper className={classes.paper}>\n          <Grid container wrap=\"nowrap\" spacing={2}>\n            <Typography noWrap>{detail.name}</Typography>\n          </Grid>\n        </Paper>\n      ))}\n    </List>\n  );\n};\n\nexport default CategoryList;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nimport \"../header/header.css\";\nimport urls from \"../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(2)}px auto`,\n    padding: theme.spacing(4),\n  },\n}));\n\nconst ItemList = (props) => {\n  const [itemData, setItemData] = useState([]);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetch(urls.getItems)\n      .then((response) => response.json())\n      .then((data) => setItemData(data.DATA));\n  });\n  const classes = useStyles();\n  const { title } = props;\n\n  return (\n    <List\n      subheader={<ListSubheader className=\"listHeader\">{title}</ListSubheader>}\n      className={classes.root}\n    >\n      {itemData.map((detail) => (\n        <Paper className={classes.paper}>\n          <Grid container wrap=\"nowrap\" spacing={2}>\n            <Grid item xs zeroMinWidth>\n              <Typography noWrap>{detail.name}</Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n      ))}\n    </List>\n  );\n};\n\nexport default ItemList;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport { localizeStrings } from \"../../localisation\";\nimport CategoryList from \"../categoryList\";\nimport ItemList from \"../itemList\";\nimport \"./header.css\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function Header() {\n  const [activeTab, setActiveTab] = useState(0);\n  const [title, setTitle] = useState(\"Items\");\n  const tabs = [\n    { id: 0, name: localizeStrings.itemText },\n    { id: 1, name: localizeStrings.categoryText },\n  ];\n\n  const handleClick = (item) => {\n    setActiveTab(item.id);\n    setTitle(item.name);\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            {localizeStrings.headerTitle}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            {tabs.map((obj) => (\n              <ListItem\n                button\n                className=\"tabSelected\"\n                key={obj.id}\n                onClick={() => handleClick(obj)}\n                selected={activeTab === obj.id}\n              >\n                <ListItemText primary={obj.name} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        {activeTab === 1 && <CategoryList title={title} />}\n        {activeTab === 0 && <ItemList title={title} />}\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\";\n\nimport Header from \"./header\";\n\nfunction App() {\n  return (\n    <ScopedCssBaseline>\n      <Header />\n    </ScopedCssBaseline>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}